{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","refs","days","document","querySelector","hours","mins","secs","timer","setAttribute","time","pad","Math","floor","textContent","value","String","padStart","selector"],"mappings":";;;AA4CA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5CA,QAAA,oBACA,MAAMA,EACJC,aAAY,WAAEC,IAmBCC,EAAAA,KAAAA,aAAAA,YAAY,KACfC,MAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKL,WAAaE,EAC/BI,KAAAA,kBAAkBD,IACxB,MAtBEL,KAAAA,WAAaA,EAEbO,KAAAA,KAAO,CACZC,KAAMC,SAASC,cAAc,6BAC7BC,MAAOF,SAASC,cAAc,8BAC9BE,KAAMH,SAASC,cAAc,6BAC7BG,KAAMJ,SAASC,cAAc,6BAC7BI,MAAOL,SAASC,cAAc,aAG5BH,KAAAA,KAAKO,MAAMC,aAAa,QAAS,oFActCT,kBAAkBU,GACTR,MAAAA,EAAO,KAAKS,IAAIC,KAAKC,MAAMH,EAAQ,QACnCL,EAAQ,KAAKM,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAC9DJ,EAAO,KAAKK,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MACxDH,EAAO,KAAKI,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,MAEnDT,KAAAA,KAAKC,KAAKY,eAAiBZ,IAC3BD,KAAAA,KAAKI,MAAMS,eAAiBT,IAC5BJ,KAAAA,KAAKK,KAAKQ,eAAiBR,IAC3BL,KAAAA,KAAKM,KAAKO,eAAiBP,IAGlCI,IAAII,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAIrC,IAAIzB,EAAe,CACf0B,SAAU,WACVxB,WAAY,IAAIG,KAAK","file":"src.6ccbc14f.js","sourceRoot":"..\\src","sourcesContent":["import './sass/main.scss';\r\nclass CountdownTimer {\r\n  constructor({ targetDate }) {\r\n    this.targetDate = targetDate;\r\n\r\n    this.refs = {\r\n    days: document.querySelector('.value[data-value=\"days\"]'),\r\n    hours: document.querySelector('.value[data-value=\"hours\"]'),\r\n    mins: document.querySelector('.value[data-value=\"mins\"]'),\r\n    secs: document.querySelector('.value[data-value=\"secs\"]'),\r\n    timer: document.querySelector('#timer-1')\r\n};\r\n\r\n this.refs.timer.setAttribute(\"style\", \"justify-content: center; text-align: center; padding-top: 150px; font-size: 60px\");\r\n\r\n// refs.timer.style.justifyContent = 'center';\r\n// refs.timer.style.textAlign = 'center';\r\n// refs.timer.style.paddingTop = '150px';\r\n// refs.timer.style.fontSize = '60px';\r\n\r\n  }\r\n    intervalId = setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const deltaTime = this.targetDate - currentTime;\r\n        this.getTimeComponents(deltaTime);\r\n    }, 1000);\r\n\r\n getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    this.refs.days.textContent = `${days}`;\r\n    this.refs.hours.textContent = `${hours}`;\r\n    this.refs.mins.textContent = `${mins}`;\r\n    this.refs.secs.textContent = `${secs}`;\r\n};\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n};\r\n\r\nnew CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2022'),\r\n});"]}