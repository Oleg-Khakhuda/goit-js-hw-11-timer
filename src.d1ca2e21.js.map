{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","refs","days","document","querySelector","hours","mins","secs","timer","setAttribute","time","pad","Math","floor","textContent","value","String","padStart","selector"],"mappings":";;;AA4CA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5CA,QAAA,oBACA,MAAMA,EACJC,aAAY,WAAEC,IAmBCC,EAAAA,KAAAA,aAAAA,YAAY,KACfC,MAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKL,WAAaE,EAC/BI,KAAAA,kBAAkBD,IACxB,MAtBEL,KAAAA,WAAaA,EAEbO,KAAAA,KAAO,CACZC,KAAMC,SAASC,cAAc,6BAC7BC,MAAOF,SAASC,cAAc,8BAC9BE,KAAMH,SAASC,cAAc,6BAC7BG,KAAMJ,SAASC,cAAc,6BAC7BI,MAAOL,SAASC,cAAc,aAG5BH,KAAAA,KAAKO,MAAMC,aAAa,QAAS,oFActCT,kBAAkBU,GACTR,MAAAA,EAAO,KAAKS,IAAIC,KAAKC,MAAMH,EAAQ,QACnCL,EAAQ,KAAKM,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAC9DJ,EAAO,KAAKK,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MACxDH,EAAO,KAAKI,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,MAEnDT,KAAAA,KAAKC,KAAKY,eAAiBZ,IAC3BD,KAAAA,KAAKI,MAAMS,eAAiBT,IAC5BJ,KAAAA,KAAKK,KAAKQ,eAAiBR,IAC3BL,KAAAA,KAAKM,KAAKO,eAAiBP,IAGlCI,IAAII,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAIrC,IAAIzB,EAAe,CACf0B,SAAU,WACVxB,WAAY,IAAIG,KAAK","file":"src.d1ca2e21.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\nclass CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n\n    this.refs = {\n    days: document.querySelector('.value[data-value=\"days\"]'),\n    hours: document.querySelector('.value[data-value=\"hours\"]'),\n    mins: document.querySelector('.value[data-value=\"mins\"]'),\n    secs: document.querySelector('.value[data-value=\"secs\"]'),\n    timer: document.querySelector('#timer-1')\n};\n\n this.refs.timer.setAttribute(\"style\", \"justify-content: center; text-align: center; padding-top: 150px; font-size: 60px\");\n\n// refs.timer.style.justifyContent = 'center';\n// refs.timer.style.textAlign = 'center';\n// refs.timer.style.paddingTop = '150px';\n// refs.timer.style.fontSize = '60px';\n\n  }\n    intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const deltaTime = this.targetDate - currentTime;\n        this.getTimeComponents(deltaTime);\n    }, 1000);\n\n getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    this.refs.days.textContent = `${days}`;\n    this.refs.hours.textContent = `${hours}`;\n    this.refs.mins.textContent = `${mins}`;\n    this.refs.secs.textContent = `${secs}`;\n};\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n};\n\nnew CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2022'),\n});"]}